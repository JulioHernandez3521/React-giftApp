{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GrifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategorias","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GrifGrid","loading","State","setState","useEffect","then","useFetchGifs","Images","GifExpertApp","categorias","ReactDOM","render","document","getElementById"],"mappings":"mMAGe,SAASA,EAAT,GAAyC,IAAlBC,EAAiB,EAAjBA,cAAiB,EAGfC,mBAAS,IAHM,mBAG5CC,EAH4C,KAGhCC,EAHgC,KAgBnD,OAEI,sBAAMC,SATW,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAQ,IACzBR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAmBO,OACrCN,EAAe,MAKnB,SAEI,uBACIO,KAAK,OACLC,MAAST,EACTU,SAlBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,Y,mCCTlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,kDACqCC,UAAUH,GAD/C,+DAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAClB,MAAM,CACFC,GAAGD,EAAIC,GACPC,MAAMF,EAAIE,MACVV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QATtB,kBAaZM,GAbY,4CAAH,sDCEPO,EAAc,SAAC,GAAmB,EAAlBJ,GAAmB,IAAhBC,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAElC,OACI,sBAAKc,UAAU,uBAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCDD,SAASO,EAAT,GAA+B,IAAZnB,EAAW,EAAXA,SAAW,ECHjB,SAACA,GAAa,IAAD,EACXd,mBAAS,CAC/BqB,KAAK,GACLa,SAAQ,IAHyB,mBAC9BC,EAD8B,KACvBC,EADuB,KAiBrC,OAXAC,qBAAW,WACPxB,EAAQC,GACHwB,MAAK,SAAAd,GACFY,EAAS,CACLf,KAAKG,EACLU,SAAQ,SAItB,CAACpB,IAEIqB,EDXyBI,CAAazB,GAAjC0B,EAH6B,EAGlCnB,KAAaa,EAHqB,EAGrBA,QAUpB,OACA,qCACI,oBAAIJ,UAAU,oCAAd,SAAoDhB,IACnDoB,GAAW,mBAAGJ,UAAW,kCAAd,qBACZ,qBAAKA,UAAU,YAAf,SAGQU,EAAOjB,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eAEIA,GADGA,EAAIC,YExBxB,IAAMgB,EAAe,WAAM,MAGMzC,mBAAU,CAAC,cAHjB,mBAGvB0C,EAHuB,KAGX3C,EAHW,KAU9B,OACI,qCACE,8CACA,cAACD,EAAD,CAAaC,cAAiBA,IAC9B,uBAKI2C,EAAWnB,KAAI,SAAAT,GAAQ,OACnB,cAACmB,EAAD,CAEEnB,SAAWA,GADJA,U,MCnB3B6B,IAASC,OACN,cAAC,EAAD,IACDC,SAASC,eAAe,W","file":"static/js/main.c961888e.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types'; \r\n\r\nexport default function AddCategory({ setCategorias }) {\r\n\r\n    \r\n    const [inputValue, setinputValue] = useState('');//no dejarlo sin comillas porque es undefined\r\n\r\n    const handleInputChange = (e) =>{\r\n        setinputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault();        \r\n        if(inputValue.trim().length >2){\r\n            setCategorias(cats => [inputValue,...cats])\r\n            setinputValue ('');\r\n        }\r\n    }\r\n    return (\r\n\r\n        <form onSubmit={ handleSubmit }>\r\n\r\n            <input \r\n                type=\"text\"\r\n                value = {inputValue}\r\n                onChange = { handleInputChange}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\n//Obliga a que le manden esa funcion o que indique que se requiere\r\nAddCategory.propTypes ={\r\n    setCategorias: PropTypes.func.isRequired\r\n}","export const getGifs = async (category) =>{\r\n    const url = `https://api.giphy.com/v1/gifs/search?q= ${ encodeURI(category) }&limit=10&api_key=B0sgNzt0QVxacbCFL1tFO3wtQoPiguLh`;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return{\r\n            id:img.id,\r\n            title:img.title,\r\n            url: img.images.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n    \r\n}\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ({id,title,url}) => {\r\n    \r\n    return (\r\n        <div className=\"card animate__fadeIn\">\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","// import React, { useState, useEffect } from 'react'\r\nimport { React } from \"react\";\r\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\r\n// import { getGifs } from '../helpers/getGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport default function GrifGrid({category}) {\r\n\r\n    // const [Images, setImages] = useState([])    \r\n    const {data:Images, loading } = useFetchGifs(category);\r\n    \r\n    // useEffect(()=>{//esto hace que se lance la peticion y coloca las imagenes\r\n    //     getGifs(category)\r\n    //         //.then(img=> setImages(img)) //se pueden usar estos o el de abajo\r\n    //         .then(setImages);\r\n    // },[category])\r\n\r\n\r\n\r\n    return (\r\n    <>\r\n        <h3 className=\"animate__animated animate__bounce\">{ category }</h3>\r\n        {loading && <p className =\"animate_animated animate__flash\">loading</p>}\r\n        <div className=\"card-grid\"> \r\n            \r\n            {    \r\n                Images.map(img =>(\r\n                    <GifGridItem \r\n                    key = {img.id}\r\n                    {...img }\r\n                    />\r\n                ))\r\n                \r\n            }\r\n        </div>\r\n    </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) =>{\r\n    const [State, setState] = useState({\r\n        data:[],\r\n        loading:true\r\n    })\r\n        \r\n    useEffect( () => {//esto hace que se lance la peticion y coloca las imagenes\r\n        getGifs(category)\r\n            .then(img =>{\r\n                setState({\r\n                    data:img,\r\n                    loading:false\r\n                })\r\n                \r\n            });\r\n    },[category])\r\n\r\n    return State;\r\n}","import React, { useState } from 'react'\r\nimport AddCategory from './components/AddCategory';\r\nimport GrifGrid from './components/GrifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    //const categoria = ['Categoria 1','Categoria 1','Categoria 1'];\r\n    const [categorias, setCategorias] = useState( ['One Punch']);\r\n    \r\n   /*  const handleAdd = ()=>{\r\n        //setcategorias(['CategoriaNueva',...categorias]);\r\n        setcategorias(cats => [...cats,'NuevaCategoria'])\r\n    }\r\n */\r\n    return (\r\n        <>\r\n          <h2>GidExpertApp</h2>  \r\n          <AddCategory setCategorias ={ setCategorias } />\r\n          <hr/>\r\n\r\n          \r\n\r\n          {\r\n              categorias.map(category => (\r\n                  <GrifGrid \r\n                    key = {category}\r\n                    category={ category } \r\n                  />\r\n              ))\r\n          }\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n   <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}